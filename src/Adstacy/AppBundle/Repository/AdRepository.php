<?php

namespace Adstacy\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Adstacy\AppBundle\Entity\User;

/**
 * AdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdRepository extends EntityRepository
{

    /**
     * Find $limit ads with id lower than $since
     *
     * @param integer|null $since
     * @param integer $limit
     *
     * @return array
     */
    public function findAdsSinceId($since, $limit = 30)
    {
        $em = $this->getEntityManager();
        $builder = $em->createQueryBuilder()
            ->select(array(
              'partial p.{id,imagename,description,tags,thumbHeight,imageWidth,imageHeight,promoteesCount,commentsCount,created}',
              'partial u.{id,username,imagename,realName}'
            ))
            ->from('AdstacyAppBundle:Ad', 'p')
            ->innerJoin('p.user', 'u')
            ->setMaxResults($limit)
            ->orderBy('p.id', 'DESC')
        ;
        if ($since) {
            $builder->andWhere('p.id < :id')
                ->setParameter('id', $since)
            ;
        }

        return $builder->getQuery()->getResult();
    }

    /**
     * Find all by $user query join promotees
     *
     * @param User $user
     *
     * @return Query
     */
    public function findByPromoteQuery(User $user)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT partial a.{id,imagename,description,tags,thumbHeight,imageHeight,imageWidth,promoteesCount,commentsCount,created},
            partial u.{id,username,imagename,realName}
            FROM AdstacyAppBundle:Ad a
            JOIN a.user u
            LEFT JOIN a.promotees pa
            LEFT JOIN pa.user pu
            WHERE pu.id = :id
        ');

        return $query->setParameter('id', $user->getId());
    }

    /**
     * Find all promotes by $user
     *
     * @param User $user
     *
     * @return Query
     */
    public function findByUserJoinPromoteQuery(User $user)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT partial a.{id,imagename,description,tags,thumbHeight,imageHeight,imageWidth,promoteesCount,commentsCount,created},
            partial u.{id,username,imagename,realName}
            FROM AdstacyAppBundle:Ad a
            JOIN a.user u
            LEFT JOIN a.promotees pa
            LEFT JOIN pa.user pu
            WHERE u.id = :id OR pu.id = :id
        ');

        return $query->setParameter('id', $user->getId());
    }

    /**
     * Find $limit ads by $user
     *
     * @param User $user
     * @param integer limit
     *
     * @return Query
     */
    public function findByUserQuery(User $user, $limit = 20)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT partial a.{id,imagename,description,tags,thumbHeight,imageWidth,imageHeight,promoteesCount,commentsCount,created}
            FROM AdstacyAppBundle:Ad a
            JOIN a.user u
            WHERE u.id = :id
            ORDER BY a.created DESC
        ');
        $query->setMaxResults($limit);

        return $query->setParameter('id', $user->getId());
    }

    /**
     * Find $limit ads by $user
     *
     * @param User $user
     * @param integer limit
     *
     * @return array
     */
    public function findByUser(User $user, $limit = 20)
    {
        return $this->findByUserQuery($user, $limit)->getResult();
    }

    /**
     * Find user's stream Query
     *
     * @param User $user
     *
     * @return Query
     */
    public function findUserStreamQuery(User $user)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT partial a.{id,imagename,description,tags,thumbHeight,imageHeight,imageWidth,promoteesCount,commentsCount,created},
            partial u.{id,username,imagename,realName}
            FROM AdstacyAppBundle:Ad a
            JOIN a.user u
            JOIN u.followers fe
            LEFT JOIN a.promotees ap
            LEFT JOIN ap.user apu
            WHERE u.id = :id OR fe.id = :id OR apu.id = :id
            ORDER BY a.created DESC
        ');
        $query->useResultCache(true, 1800, 'AdFindUserStreamQuery');

        return $query->setParameter('id', $user->getId());
    }

    /**
     * Find all ads with most promote since $since
     *
     * @param Datetime $since
     * @param integer limit
     *
     * @return array (0 => Ad, 1 => cnt)
     */
    public function findTrendingSince($since, $limit = 50)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('
            SELECT a, u, COUNT(ap.created) as cnt
            FROM AdstacyAppBundle:Ad a
            JOIN a.user u
            JOIN a.promotees ap
            WHERE ap.created >= :since
            GROUP BY a.id, u.id
            ORDER BY cnt DESC
        ');
        $query->setMaxResults($limit);
        $query->useResultCache(true, 3600, 'AdFindTrendingSince');

        return $query->setParameter('since', $since)->getResult();
    }
}
