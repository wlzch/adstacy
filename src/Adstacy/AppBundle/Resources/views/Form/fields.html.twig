{% extends 'form_div_layout.html.twig' %}

{% block form_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}{% if required %} <span class="required">*</span>{% endif %}</label>
    {% endif %}
{% endspaceless %}
{% endblock form_label %}

{% block form_errors %}
{% spaceless %}
    {% if errors|length > 0 %}
      {% for error in errors %}
      <div class="alert alert-warning alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        <strong>Warning</strong>! {{ error.message }}
      </div>
      {% endfor %}
    {% endif %}
{% endspaceless %}
{% endblock %}

{% block image_widget %}
{% set imageExists = obj and obj.image and obj.imagename %}
<div class="image-upload-input">
  <input class="image-upload" type="file" name="{{ full_name }}" {% if not imageExists and image_required %}required=required{% endif %} />
  <div class="input-group">
    <input type="text" class="form-control image-upload-text image-upload-trigger" placeholder="Click to choose image" readonly="readonly" />
    <span class="input-group-btn">
      <button class="btn btn-default btn-info image-upload-trigger" type="button">Choose Image</button>
    </span>
  </div>
</div>

<div class="image-preview {{ image_size }}">
  {% if imageExists %}
    <img src="{{ vich_uploader_asset(obj, 'image') }}">
  {% elseif additional_fields|length > 0 %}
    {% for field in additional_fields %}
      {% if attribute(obj, field) is defined and attribute(obj, field) %}
        <img src="{{ attribute(obj, field) }}">
      {% endif %}
    {% endfor %}
  {% else %}
    <img>
  {% endif %}
</div>

<script type="text/javascript">
  $(function() {
    var $upload = $('.image-upload');
    var $preview = $('.image-preview');
    var $trigger = $('.image-upload-trigger');
    var $text = $('.image-upload-text');
    $upload.change(function(e) {
      var files = FileAPI.getFiles(e);
      if (files && files[0]) {
        var val = $upload.val();
        $text.val(val.substring(val.lastIndexOf('\\') + 1, val.length));
        if (window.FileReader) {
          FileAPI.readAsImage(files[0], function(evt) {
            if (evt.type == 'load') {
              $preview.find('img').replaceWith(evt.result);
              $text.val(files[0].name);
            }
          });
        }
      }
    });
    $trigger.click(function() {
      $upload.trigger('click');
    });
  });
</script>
{% endblock %}

{% block wysihtml5_widget %}
  <div id="wysihtml5-container">
    <div id="wysihtml5-editor-toolbar">
      <header>
        <ul class="commands">
          <li data-wysihtml5-command="bold" title="Make text bold (CTRL + B)" class="command"><i class="icon icon-bold"></i></li>
          <li data-wysihtml5-command="italic" title="Make text italic (CTRL + I)" class="command"><i class="icon icon-italic"></i></li>
          <li data-wysihtml5-command="insertUnorderedList" title="Insert an unordered list" class="command"><i class="icon icon-list-ul"></i></li>
          <li data-wysihtml5-command="insertOrderedList" title="Insert an ordered list" class="command"><i class="icon icon-list-ol"></i></li>
          <li data-wysihtml5-command="createLink" title="Insert a link" class="command"><i class="icon icon-link"></i></li>
          <li data-wysihtml5-command="insertImage" title="Insert an image" class="command"><i class="icon icon-camera"></i></li>
          <li data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h1" title="Insert headline 1" class="command">H1</li>
          <li data-wysihtml5-command="formatBlock" data-wysihtml5-command-value="h2" title="Insert headline 2" class="command">H2</li>
        </ul>
      </header>
      <div data-wysihtml5-dialog="createLink" style="display: none;">
        <label>
          Link:
          <input data-wysihtml5-dialog-field="href" value="http://">
        </label>
        <a data-wysihtml5-dialog-action="save">OK</a>&nbsp;<a data-wysihtml5-dialog-action="cancel">Cancel</a>
      </div>

      <div data-wysihtml5-dialog="insertImage" style="display: none;">
        <label>
          Image:
          <input data-wysihtml5-dialog-field="src" value="http://">
        </label>
        <a data-wysihtml5-dialog-action="save">OK</a>&nbsp;<a data-wysihtml5-dialog-action="cancel">Cancel</a>
      </div>
    </div>
    <textarea id="{{ id }}" name="{{ full_name }}" {{ block('widget_attributes') }}>{{ value }}</textarea>
  </div>
{% endblock %}

{% block ad_images_widget %}
  {% set images = obj.images %}
  {% set ids = [] %}
  {% for image in images %}
    {% set ids = ids|merge([image.id]) %}
  {% endfor %}
  <input type="hidden" id="{{ id }}" name="{{ full_name }}" value="{{ ids|join(',') }}">
  <span class="btn btn-success fileinput-button">
    <span>Add image</span>
    <input type="file" id="{{ id }}_file" name="ad[image]">
  </span>
  <div id="{{ id }}_widget">
    <ul>
      {% for image in images %}
        <li><img src="{{ vich_uploader_asset(image, 'image') }}"></li>
      {% endfor %}
    </ul>
  </div>

  <script type="text/javascript">
    $(function() {
      var $list = $('#{{ id }}_widget ul');
      var $ids = $('#{{ id }}');
      $('#{{ id }}_file').fileupload({
        url: Routing.generate('adstacy_app_upload'),
        dataType: 'json',
        imageOrientation: true,
        disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator && navigator.userAgent),
        imageMaxWidth: 1024,
        done: function(e, data) {
          console.log(data.result);
          if (data.result.status == 'ok') {
            $.each(data.result.files, function(index, file) {
              var val = $ids.val();
              if (val.indexOf(';') == -1) {
                val = val + ';';
              }
              val = val + file.id + ',';
              $ids.val(val);
            });
          } else {
            // display error
          }
          $('#progressbar').progressbar('destroy');
        },
        fail: function(e, data) {
          $('#progressbar').progressbar('destroy');
        },
        progressall: function(e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $('#progressbar').progressbar({
            value: progress
          });
        }
      }).prop('disabled', !$.support.fileInput)
      .parent().addClass($.support.fileInput ? undefined : 'disabled')
    });
  </script>
{% endblock %}
